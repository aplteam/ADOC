 r←{numbers}L group;A
⍝ Prints a list with all test cases and the first comment line to the session.
⍝ If "group" is not empty then it will print only that group (case independent).
⍝ May or may not start with "Test_"
⍝ If "numbers" is defined only those number are printed.
 :If 9=#.⎕NC'APLTreeUtils'
     A←#.APLTreeUtils
 :ElseIf 9=⎕NC'APLTreeUtils'
     A←APLTreeUtils
 :ElseIf 9=##.⎕NC'APLTreeUtils'
     A←##.APLTreeUtils
 :ElseIf 9∊⊃¨⎕RSI.⎕NC⊂'APLTreeUtils'
     A←({⎕ML←1 ⋄ ⊃⍵}(9=⊃¨⎕RSI.⎕NC⊂'APLTreeUtils')/⎕RSI).APLTreeUtils
 :ElseIf 9∊⊃¨⎕RSI.##.⎕NC⊂'APLTreeUtils'
     A←({⎕ML←1 ⋄ ⊃⍵}(9=⊃¨⎕RSI.##.⎕NC⊂'APLTreeUtils')/⎕RSI.##).APLTreeUtils
 :Else
     'Missing: APLTreeUtils'⎕SIGNAL 6
 :EndIf
 numbers←{(0<⎕NC ⍵):⍎⍵ ⋄ ⍬}'numbers'
 r←↓'Test_'{⍵⌿⍨((⍴⍺)↑[1+⎕IO]⍵)∧.=⍺}'T'⎕NL 3
 :If ~0∊⍴group
     group←A.Lowercase'test_'{((⍺≢(⍴⍺)↑⍵)/⍺),⍵}group
     r←(({⎕ML←1 ⋄ ↑⍵}A.Lowercase(⍴group)↑¨r)∧.=group)⌿r
 :EndIf
 :If 0∊⍴r
     r←0 1⍴''
 :Else
     :If ~0∊⍴numbers
         r←(({⍎⍵↑⍨-(-⎕IO)+'_'⍳⍨⌽⍵}¨r)∊numbers)⌿r
     :EndIf
     r←r,⍪{{⍵↓⍨+/∧\' '=⍵}{⎕IO←1 ⋄ ⍵↓⍨⍵⍳'⍝'}{⎕ML←3 ⋄ ∊⍵}1↑1↓⎕NR ⍵}¨r
     r←r[⍋{⎕ML←1 ⋄ ↑⍵}A.Lowercase r[;⎕IO];]
 :EndIf
